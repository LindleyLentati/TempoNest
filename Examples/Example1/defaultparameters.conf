
# General parameters:
# Root of the results files,relative to the directory in which TempoNest is run. This will be followed by the pulsar name, and then the individual output file extensions.
root = results/Example1-


# numTempo2its - sets the number of iterations Tempo2 should do before setting the priors.  Should only be set to 0 if all the priors are set in setTNPriors
numTempo2its = 1;

# doLinearFit:  Switches between the full non linear timing model (doLinearFit=0) and the linear approximation for the timing model based on the initial Tempo2 Fit (= 1).

doLinearFit = 0;


# ModelChoice

incEFAC = 0; # include EFAC: 0 = none, 1 = one for all residuals, 2 = one for each observing system
incEQUAD = 0; # include EQUAD: 0 = no, 1 = yes
incRED = 0; # include Red Noise model: 0 = no, 1 = power law model (vHL2013), 2 = model independent (L2013)
incDM = 0; # include Red Noise model: 0 = no, 1 = power law model (vHL2013), 2 = model independent (L2013)

doTimeMargin = 0; # 0=No Analytical Marginalisation over Timing Model. 1=Marginalise over QSD. 2=Marginalise over all Model params excluding jumps.
doJumpMargin = 0; # 0=No Analytical Marginalisation over Jumps. 1=Marginalise over Jumps.



# Priors

# Which priors to use: customPriors=0 uses the Priors from tempo2 fit, along with values set in this function, =1:set priors for specific parameters in setTNPriors
customPriors = 0; 


# FitSig sets the priors for all timing model and jump parameters for both non linear and linear timing models.
# For the non linear fit, Fitsig multiples the error returned by Tempo2, and sets the prior to be the best fit value returned by tempo2 +/- the scaled error.
#  For the linear fit, multiplies the ratio of the rms of the designmatrix vector for each timing model parameter, and the rms of the residuals returned by Tempo2.
FitSig = 5;

# Remaining priors for the stochastic parameters.  
EFACPrior[0] = 0.1;
EFACPrior[1] = 10;


EQUADPrior[0] = -10;
EQUADPrior[1] = -5;

numRedPL = 0;
numDMPL = 0;

AlphaPrior[0] = 1.1;
AlphaPrior[1] = 6.1;

AmpPrior[0] = -20;
AmpPrior[1] = -3;

numCoeff = 10;

CoeffPrior[0] = -10;
CoeffPrior[1] = 0;



DMAlphaPrior[0] = 1.1;
DMAlphaPrior[1] = 6.1;


DMAmpPrior[0] = -18;
DMAmpPrior[1] = -8;

#Custom Priors: Set Dpriors and TempoPriors to set custom start and end points for the priors on parameters, or set TempoPriors[i][2]=1 to marginalise over that timing model parameter specifically


#TempoPriors[0][2] = 1;
#TempoPriors[1][2] = 1;



IS = 0;
ceff = 0;
efr = 0.8;
nlive = 500;

